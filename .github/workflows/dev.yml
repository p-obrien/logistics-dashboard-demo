name: Terraform Deploy

on:
  push:
    branches:
      - dev
    paths:
      - 'infrastructure/**'

permissions:
  id-token: write
  contents: read

jobs:
  opentofu:
    name: Deploy with OpenTofu
    runs-on: ubuntu-latest

    concurrency:
      group: terraform-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        if: github.event.pull_request.head.repo.full_name == github.repository || github.event_name != 'pull_request'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.DEV_AWS_ACCOUNT_ID }}:role/${{ secrets.GITHUBOIDCROLE }}
          aws-region: ap-southeast-2

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: v1.9.1

      - name: Generate tfvars file
        working-directory: infrastructure/environments/dev
        run: |
          cat <<EOF > terraform.tfvars
          cluster_name    = "dev-webservices-cluster"
          vpc_name        = "microservices-demo-vpc"
          region          = "ap-southeast-2"
          vpc_cidr_block  = "10.0.0.0/16"
          azs             = ["ap-southeast-2a", "ap-southeast-2b"]
          private_subnets = ["10.0.1.0/24", "10.0.2.0/24"]
          public_subnets  = ["10.0.101.0/24", "10.0.102.0/24"]
          cluster_admin = "${{ secrets.DEV_EKS_CLUSTER_ADMIN }}"
          EOF
          
      - name: OpenTofu Init
        run: tofu init
        working-directory: infrastructure/environments/dev

      - name: OpenTofu Validate
        run: tofu validate
        working-directory: infrastructure/environments/dev

      - name: OpenTofu Plan
        run: tofu plan -out=tfplan
        working-directory: infrastructure/environments/dev

      - name: OpenTofu Apply
        if: github.ref == 'refs/heads/dev'
        run: tofu apply -auto-approve tfplan
        working-directory: infrastructure/environments/dev
